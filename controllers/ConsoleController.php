<?php
namespace grozzzny\sitemap\controllers;


use grozzzny\sitemap\components\Sitemap;
use grozzzny\sitemap\Module;
use yii\console\Controller;
use Yii;
use yii\easyii2\components\FastModel;
use yii\easyii2\modules\article\api\Article;
use yii\helpers\FileHelper;

class ConsoleController extends Controller
{

    /**
     * @var Sitemap
     */
    private $sitemap;

    /**
     * @var Module
     */
    public $module;

    private $sitemap_index = '/sitemap.xml';

    private $sitemap_pages = '/sitemaps/sitemap_pages.xml';

    private $sitemap_sections = '/sitemaps/sitemap_sections.xml';

    public $data_sitemap;

    public function runAction($id, $params = [])
    {
        Yii::setAlias('@sitemap', Yii::getAlias('@vendor/grozzzny/sitemap'));

        $this->sitemap = new Sitemap($this->module->domain, Yii::getAlias('@webroot'));

        return parent::runAction($id, $params); // TODO: Change the autogenerated stub
    }

    public function install()
    {
        $this->createDirectorySitemaps();
        $this->createStylesheet();
        $this->createNewSitemapIndex();
        $this->createSitemapIndexPages();
    }

    protected function createDirectorySitemaps()
    {
        $dir = Yii::getAlias('@webroot/sitemaps');
        if(!file_exists($dir)) FileHelper::createDirectory($dir);
    }

    protected function createStylesheet()
    {
        $stylesheet_main = Yii::getAlias('@sitemap/components/main-sitemap.xsl');
        $stylesheet = Yii::getAlias('@webroot/main-sitemap.xsl');
        if(!file_exists($stylesheet)) {
            copy($stylesheet_main, $stylesheet);

            $text = file_get_contents($stylesheet);
            $text = preg_replace('/{generatedByLink}/', $this->module->generatedByLink, $text);
            $text = preg_replace('/{generatedByName}/', $this->module->generatedByName, $text);
            file_put_contents($stylesheet, $text);
        }
    }

    protected function createNewSitemapIndex()
    {
        $mainSitemapIndex = Yii::getAlias('@webroot/'.$this->sitemap_index);
        if(!file_exists($mainSitemapIndex)) $this->sitemap->createNewSitemapIndex($this->sitemap_index);
    }

    protected function createSitemapIndexPages()
    {
        $mainSitemapPages = Yii::getAlias('@webroot/'.$this->sitemap_pages);
        if(!file_exists($mainSitemapPages)) $this->sitemap->createNewSitemap($this->sitemap_pages);

        if(!$this->sitemap->hasSitemapIndex($this->sitemap_pages, $this->sitemap_index)) $this->sitemap->insertSitemapIndex($this->sitemap_pages, $this->sitemap_index);
    }

    public function actionStaticPages()
    {
        $dir = Yii::getAlias('@webroot/'.$this->sitemap_pages);
        if(file_exists($dir)) unlink($dir);

        $this->install();

        /** @var \grozzzny\sitemap\models\Sitemap $model */
        $model = $this->module->getModelBySlug('sitemap');

        foreach ($model::find()->where(['status' => FastModel::STATUS_ON])->orderBy(['lastmod' => SORT_ASC])->All() as $model){
            $this->sitemap->insertSitemap($this->sitemap_pages, $model->loc, $model->getLastmod(), $model->changefreq, $model->priority);
        }

        $this->sitemap->updateSitemapIndex($this->sitemap_pages, $this->sitemap_index, $model->getLastmod());
    }



    public function actionUpdate()
    {
        $this->install();

        if(!$this->sitemap->hasSitemapIndex($this->sitemap_sections, $this->sitemap_index)) $this->sitemap->insertSitemapIndex($this->sitemap_sections, $this->sitemap_index);

        //Создаем sitemap index
        $this->sitemap->createNewSitemapIndex($this->sitemap_sections);

        //Обновляем в главном sitemap дату sitemap_index_objects.xml
        $this->sitemap->updateSitemapIndex($this->sitemap_sections, $this->sitemap_index);

        $this->getDataSitemap();

        //Проходим по массиву и создаем множество sitemapOV по патерну
        $this->sitemap->generateSitemap($this->data_sitemap, '/sitemaps/sitemap_section_#KEY.xml', $this->sitemap_sections);

    }


    /**
     * Метод формирует свойство $this->data_sitemap
     *
     * data_sitemap[$object->user_id][] = [
     *       'loc' => http://www.example.com/,
     *       'lastmod' => 2005-01-01,
     *       'changefreq' => always hourly daily weekly monthly yearly never,
     *       'priority' => 0.8,
     *   ]
     */
    public function getDataSitemap()
    {
//        $this->getDataArticles();
//        $this->getDataCategories();
//        $this->getDataGallery();
    }


    public function getDataCategories()
    {
        $key_section = 'uslugi';
        $categories = \yii\easyii2\modules\article\models\Category::find()->where([
            'AND',
            ['tree' => '2'],
            ['!=', 'category_id', '2']
        ])->all();

        foreach($categories as $category){
            if(!count($category->items)){
                $loc = $this->module->domain . '/uslugi/'.$category->slug;
                $changefreq = 'monthly';
                $priority = '0.7';
                $lastmod  = $this->lastmod;
                echo $loc . PHP_EOL;
                $this->data_sitemap[$key_section][] = array(
                    'loc'           => $loc, //http://www.example.com/
                    'lastmod'       => $lastmod, //2005-01-01
                    'changefreq'    => $changefreq, //always hourly daily weekly monthly yearly never
                    'priority'      => $priority, //0.8
                );
            }else{
                $items = [];
                foreach($category->items as $child){
                    $loc = $this->module->domain . '/uslugi/'.$category->slug.'/'.$child->slug;
                    $changefreq = 'monthly';
                    $priority = '0.7';
                    $lastmod  = $this->lastmod;
                    echo $loc . PHP_EOL;
                    $this->data_sitemap[$key_section][] = array(
                        'loc'           => $loc, //http://www.example.com/
                        'lastmod'       => $lastmod, //2005-01-01
                        'changefreq'    => $changefreq, //always hourly daily weekly monthly yearly never
                        'priority'      => $priority, //0.8
                    );
                }

                $loc = $this->module->domain . '/uslugi/'.$category->slug;
                $changefreq = 'monthly';
                $priority = '0.7';
                $lastmod  = $this->lastmod;
                echo $loc . PHP_EOL;
                $this->data_sitemap[$key_section][] = array(
                    'loc'           => $loc, //http://www.example.com/
                    'lastmod'       => $lastmod, //2005-01-01
                    'changefreq'    => $changefreq, //always hourly daily weekly monthly yearly never
                    'priority'      => $priority, //0.8
                );
            }
        }
    }


    public function getDataArticles()
    {
        foreach(Article::cat('clinika')->items() as $article)
        {

            $key_section = 'clinika';

            $loc = $this->module->domain . '/clinika/'.$article->slug;
            $changefreq = 'monthly';
            $priority = '0.7';
            $lastmod  = date('Y-m-d', $article->time);

            echo $loc . PHP_EOL;

            $this->data_sitemap[$key_section][] = array(
                'loc'           => $loc, //http://www.example.com/
                'lastmod'       => $lastmod, //2005-01-01
                'changefreq'    => $changefreq, //always hourly daily weekly monthly yearly never
                'priority'      => $priority, //0.8
            );
        }
    }

    public function getDataGallery()
    {
        $items_gallery = [];
        $key_section = 'gallery';

        foreach(\yii\easyii2\modules\gallery\models\Category::tree() as $category){
            $children = $category->children;

            if(count($children) < 1){
                $loc = $this->module->domain . '/foto/'.$category->slug;
                $changefreq = 'monthly';
                $priority = '0.7';
                $lastmod  = date('Y-m-d', $category->time);
            }elseif(count($children) == 1){
                $loc = $this->module->domain . '/foto/'.$category->children[0]->slug;
                $changefreq = 'monthly';
                $priority = '0.7';
                $lastmod  = date('Y-m-d', $category->children[0]->time);
            }else{
                $items = [];
                foreach($children as $child){
                    $loc = $this->module->domain . '/foto/'.$child->slug;
                    $changefreq = 'monthly';
                    $priority = '0.7';
                    $lastmod  = date('Y-m-d', $child->time);

                    $this->data_sitemap[$key_section][] = array(
                        'loc'           => $loc, //http://www.example.com/
                        'lastmod'       => $lastmod, //2005-01-01
                        'changefreq'    => $changefreq, //always hourly daily weekly monthly yearly never
                        'priority'      => $priority, //0.8
                    );
                }

                $loc = $this->module->domain . '/foto/'.$children[0]->slug;
                $changefreq = 'monthly';
                $priority = '0.7';
                $lastmod  = date('Y-m-d', $children[0]->time);
            }

            $this->data_sitemap[$key_section][] = array(
                'loc'           => $loc, //http://www.example.com/
                'lastmod'       => $lastmod, //2005-01-01
                'changefreq'    => $changefreq, //always hourly daily weekly monthly yearly never
                'priority'      => $priority, //0.8
            );
        }
    }

}